Aby zastosować testowanie jednostkowe dla zadanych zadań, w pierwszej kolejności kody wszystkich podprogramów zostały przeniesione z klasy main do nowej klasy KonstruktorZadan. Równiez, aby móc przekazywać parametry do testowania kodu, każda z metod została przeciążona. Klasa KonstruktorZadan została stworzona, aby móc obiektowo podejść do poszczególnych zadań. Każde z zadań ma własną metodę.
Zad1 to zadanie podające prawdę, jeśli jedna z dwóch temperatur jest mniejsza od 100. Zad2 wypisuje true jeżeli w tablicy int znajdują się liczby 1,2,3, w tej kolejności. Zad3. zwraca połowę zadanego pola String za pomocą metody substring. Zad4. odwraca kolejność tablicy int, wykorzystując tablicę pomocniczą temp.
	Bardzo ważnym jest odpowiedni dobór rodzaju danej metody zadania, która ta metoda będzie zwracać. Ma to wpływ na poprawne działanie metody assertEqual. W klasie MainTest znajdują się wszystkie testy jednostkowe TestZad, osobno dla każdego zadania. W każdym podprogramie testującym znajduje się zdefiniowane pole, które będzie wykorzystywane przy porównywaniu wyniku spodziewanego do rzeczywistego; jest to wynikOczekiwany. Dla zadania 1 i 2 pola są rodzaju boolean, dla zad3 String oraz dla Zad4 tablica int. Dla każdego testu należy podać dla jakich wartości chcemy przeprowadzić test i jakiego wyniku oczekujemy. Następnym elementem metod testowania jest konstruktor klasy KonstruktorZadan, który umożliwia wykonanie zadań(1,2,3,4). Ostatnim elementem jest metoda assertEquals, która w pierwszym ma wartość oczekiwaną, natomiast w drugim argumencie wykonuje żądaną metodę zadania i porównuje zwrócony wynik z wartością argumentu pierwszego. Dla porównania tablic w Zad4 użyto assertArrayEquals. Jeżeli wartości są takie same program zostaje wykonany bez żadnego przerwania. W razie braku zgodności wyświetla się błąd na konsoli oraz komentarz "Test niezdany". Wtedy wiadomo, że testowany program nie działa poprawnie. W celu sprawdzenia działania testowania, w klasie Main został stworzony obiekt testujący testJUnit klasy MainTest oraz wywołane są metody testujące każde zadanie.
